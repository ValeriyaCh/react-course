[{"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\App.js":"1","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\index.js":"2","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\MenuComponent.js":"3","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\dishes.js":"4","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\reportWebVitals.js":"5","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\FooterComponent.js":"8","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\HeaderComponent.js":"9","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\comments.js":"12","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\promotions.js":"13","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\AboutComponent.js":"14","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\leaders.js":"15"},{"size":352,"mtime":1611614624932,"results":"16","hashOfConfig":"17"},{"size":639,"mtime":1611512404486,"results":"18","hashOfConfig":"17"},{"size":1559,"mtime":1611655678094,"results":"19","hashOfConfig":"17"},{"size":1448,"mtime":1611614748238,"results":"20","hashOfConfig":"17"},{"size":362,"mtime":1610059285698,"results":"21","hashOfConfig":"17"},{"size":6854,"mtime":1611870651872,"results":"22","hashOfConfig":"17"},{"size":2039,"mtime":1611858099412,"results":"23","hashOfConfig":"17"},{"size":2639,"mtime":1611611832537,"results":"24","hashOfConfig":"17"},{"size":5101,"mtime":1611767966749,"results":"25","hashOfConfig":"17"},{"size":1112,"mtime":1611614903233,"results":"26","hashOfConfig":"17"},{"size":10496,"mtime":1611867924046,"results":"27","hashOfConfig":"17"},{"size":4117,"mtime":1611614847935,"results":"28","hashOfConfig":"17"},{"size":435,"mtime":1611614814591,"results":"29","hashOfConfig":"17"},{"size":4387,"mtime":1611685957790,"results":"30","hashOfConfig":"17"},{"size":2345,"mtime":1611614831273,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xefejv",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\App.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\index.js",[],["67","68"],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\dishes.js",[],["69","70"],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\DishdetailComponent.js",["71","72","73"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Row, Col, Label,  Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    this.state = {\r\n        isModalOpen: false\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    }   \r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.toggleModal();\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={{size: 12}}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"  className=\"form-control\" md={12}>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={{size: 12}}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(3), \r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:12}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDate({date}) {\r\n    return (\r\n        new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', \r\n                                day: '2-digit'}).format(new Date(Date.parse(date)))\r\n    );\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    \r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card key={dish.id}>\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n  }\r\n\r\n  function RenderComments({comments}) {\r\n\r\n    if (comments != null)\r\n        return(      \r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                {comments.map(comment => (\r\n                <li key={comment.id} className=\"mb-2\">\r\n                <p>{comment.comment}</p>              \r\n                <p> -- {comment.author}{\", \"}<RenderDate date={comment.date}/></p>             \r\n                </li>\r\n                            \r\n            ))}\r\n            </ul>   \r\n                <CommentForm/>\r\n            </div>\r\n            );           \r\n    else\r\n        return(\r\n            <div>\r\n                <CommentForm/>\r\n            </div>\r\n        );\r\n    \r\n  }\r\n\r\n \r\n  const  DishDetail = (props) => {\r\n\r\n    if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                <RenderDish dish={props.dish} />\r\n                <RenderComments comments={props.comments} />\r\n            </div>\r\n            </div>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n    \r\n  }\r\n\r\nexport default DishDetail;","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\MainComponent.js",["74"],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\HeaderComponent.js",[],["75","76"],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\ContactComponent.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label, Form, FormGroup, Input, FormFeedback } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\lerac\\Desktop\\lera\\coursera\\Front-end\\react\\confusion\\src\\shared\\leaders.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":44,"column":37,"nodeType":"100","endLine":44,"endColumn":129},{"ruleId":"98","severity":1,"message":"101","line":56,"column":37,"nodeType":"100","endLine":63,"endColumn":43},{"ruleId":"98","severity":1,"message":"102","line":78,"column":37,"nodeType":"100","endLine":80,"endColumn":68},{"ruleId":"103","severity":1,"message":"104","line":24,"column":3,"nodeType":"105","messageId":"106","endLine":26,"endColumn":4},{"ruleId":"92","replacedBy":"107"},{"ruleId":"94","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":20},{"ruleId":"109","severity":1,"message":"114","line":3,"column":22,"nodeType":"111","messageId":"112","endLine":3,"endColumn":36},{"ruleId":"109","severity":1,"message":"115","line":3,"column":63,"nodeType":"111","messageId":"112","endLine":3,"endColumn":67},{"ruleId":"109","severity":1,"message":"116","line":3,"column":69,"nodeType":"111","messageId":"112","endLine":3,"endColumn":78},{"ruleId":"109","severity":1,"message":"117","line":3,"column":80,"nodeType":"111","messageId":"112","endLine":3,"endColumn":85},{"ruleId":"109","severity":1,"message":"118","line":3,"column":87,"nodeType":"111","messageId":"112","endLine":3,"endColumn":99},{"ruleId":"119","severity":1,"message":"120","line":50,"column":29,"nodeType":"100","endLine":50,"endColumn":71},{"ruleId":"98","severity":1,"message":"101","line":65,"column":37,"nodeType":"100","endLine":71,"endColumn":44},{"ruleId":"98","severity":1,"message":"101","line":87,"column":37,"nodeType":"100","endLine":93,"endColumn":44},{"ruleId":"98","severity":1,"message":"101","line":109,"column":37,"nodeType":"100","endLine":115,"endColumn":44},{"ruleId":"98","severity":1,"message":"101","line":132,"column":37,"nodeType":"100","endLine":138,"endColumn":44},{"ruleId":"98","severity":1,"message":"121","line":154,"column":45,"nodeType":"100","endLine":156,"endColumn":52},{"ruleId":"98","severity":1,"message":"99","line":162,"column":37,"nodeType":"100","endLine":163,"endColumn":66},{"ruleId":"98","severity":1,"message":"102","line":172,"column":37,"nodeType":"100","endLine":174,"endColumn":68},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["122"],["123"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'FormFeedback' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]